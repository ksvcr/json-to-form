{"version":3,"sources":["features/PrettyJsonTextarea/PrettyJsonTextarea.module.css","features/FormFromJson/components/Control/Control.module.css","shared/components/Radio/Radio.module.css","features/FormFromJson/components/RadioGroup/RadioGroup.module.css","shared/components/Button/Button.module.css","features/FormFromJson/components/Form/Form.module.css","shared/components/Tabs/Tabs.module.css","shared/layouts/DefaultLayout/DefaultLayout.module.css","features/FormFromJson/FormContext.tsx","features/FormFromJson/components/Field/Field.tsx","shared/components/Radio/Radio.tsx","features/FormFromJson/components/RadioGroup/RadioGroup.tsx","shared/components/TextInput/TextInput.tsx","shared/components/Number/Number.tsx","shared/components/Date/Date.tsx","shared/components/Checkbox/Checkbox.tsx","shared/components/Textarea/Textarea.tsx","features/FormFromJson/components/Control/Control.tsx","features/FormFromJson/components/Fields/Fields.tsx","shared/components/Button/Button.tsx","features/FormFromJson/components/Form/Form.tsx","features/FormFromJson/FormFromJson.tsx","features/PrettyJsonTextarea/PrettyJsonTextarea.tsx","features/PrettyJsonTextarea/validateJson.ts","shared/components/Tabs/Tabs.tsx","shared/layouts/DefaultLayout/DefaultLayout.tsx","screens/JsonToFormScreen/defaultJsonConfig.ts","screens/JsonToFormScreen/JsonToFormScreen.tsx","app/App.tsx","index.tsx"],"names":["module","exports","FormContext","createContext","getDefaultValues","config","fields","reduce","acc","field","value","name","FormContextProvider","children","formData","setFormData","useState","handleChangeByName","useCallback","prevFormData","handleChange","data","providerValue","useMemo","onChangeByName","onChange","Provider","Field","fieldValue","onFieldChange","context","useContext","Error","useFormField","Radio","checked","id","label","className","styles","type","RadioGroup","options","group","map","option","isChecked","toString","TextInput","props","Number","Date","Checkbox","Boolean","Textarea","cn","Control","memo","handleInputChange","e","target","handleTextareaChange","control","htmlFor","getControl","Fields","Button","onClick","button","Form","handleReset","useForm","handleSubmit","preventDefault","console","log","title","onSubmit","controls","hideSubmit","submitText","hideCancel","cancelText","FormFromJson","PrettyJsonTextarea","jsonString","setJsonString","JSON","stringify","error","setError","success","setSuccess","handleApply","async","parsedValue","parse","state","json","Joi","object","string","required","boolean","array","items","valid","number","validate","message","SyntaxError","textarea","role","cx","classNames","bind","Tabs","activeId","setActiveId","item","active","filter","content","DefaultLayout","defaultJsonConfig","JsonToFormScreen","setJson","tabItems","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.824ff02a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"PrettyJsonTextarea_error__2fz6v\",\"success\":\"PrettyJsonTextarea_success__ygF50\",\"controls\":\"PrettyJsonTextarea_controls__17pfY\",\"textarea\":\"PrettyJsonTextarea_textarea__3VlgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Control_control__1tG12\",\"label\":\"Control_label__1Ca49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Radio_label__4igNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"RadioGroup_group__2b1eL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3ORSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Form_controls__7BYFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Tabs_nav__3Fxw6\",\"button\":\"Tabs_button__1YBPu\",\"active\":\"Tabs_active__2-Utt\",\"panels\":\"Tabs_panels__o9K0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"DefaultLayout_layout__3MRKh\"};","import { createContext, useContext, useMemo, useState, useCallback, ReactNode } from 'react';\n\nimport { FormConfig, FormField, FieldValue } from 'features/FormFromJson/types';\n\ntype FormData = Record<FormField['name'], FieldValue>;\n\ntype FormContextValue = {\n  formData: FormData;\n  config: FormConfig;\n  onChange: (newData: FormData) => void;\n  onChangeByName: (name: FormField['name'], value: FieldValue) => void;\n};\n\ntype FormContextProviderProps = {\n  config: FormConfig;\n  children: ReactNode;\n};\n\nexport const FormContext = createContext<FormContextValue | null>(null);\n\nconst getDefaultValues = (config: FormConfig) => {\n  return config.fields.reduce((acc, field) => {\n    const { value, name } = field;\n    acc[name] = value ?? '';\n\n    return acc;\n  }, {} as FormData);\n};\n\nexport const FormContextProvider = ({ children, config }: FormContextProviderProps) => {\n  const [formData, setFormData] = useState(() => getDefaultValues(config));\n\n  const handleChangeByName = useCallback((name, value) => {\n    setFormData(prevFormData => {\n      return { ...prevFormData, [name]: value };\n    });\n  }, []);\n\n  const handleChange = useCallback(data => {\n    setFormData(data);\n  }, []);\n\n  const providerValue = useMemo(\n    () => ({ formData, config, onChangeByName: handleChangeByName, onChange: handleChange }),\n    [formData, config, handleChangeByName, handleChange]\n  );\n\n  return <FormContext.Provider value={providerValue}>{children}</FormContext.Provider>;\n};\n\nexport function useFormField(name: FormField['name']) {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a FormProvider');\n  }\n\n  const { formData, onChangeByName } = context;\n\n  const handleChange = useCallback(\n    (value: FieldValue) => {\n      onChangeByName(name, value);\n    },\n    [name, onChangeByName]\n  );\n\n  const fieldValue = formData[name];\n\n  return useMemo(() => ({ onFieldChange: handleChange, fieldValue }), [handleChange, fieldValue]);\n}\n\nexport function useForm() {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a FormProvider');\n  }\n\n  const { formData, config, onChange } = context;\n\n  const handleReset = useCallback(() => {\n    onChange(getDefaultValues(config));\n  }, [config, onChange]);\n\n  return useMemo(() => ({ formData, handleReset }), [formData, handleReset]);\n}\n","import { ReactNode } from 'react';\n\nimport { FormField, FieldValue } from 'features/FormFromJson/types';\n\nimport { useFormField } from 'features/FormFromJson/FormContext';\n\ntype FieldProps = {\n  children: (value: FieldValue, onChange: (value: FieldValue) => void) => ReactNode;\n  name: FormField['name'];\n};\n\nexport const Field = ({ name, children }: FieldProps) => {\n  const { fieldValue, onFieldChange } = useFormField(name);\n\n  return <>{children(fieldValue, onFieldChange)}</>;\n};\n","import { InputHTMLAttributes } from 'react';\nimport styles from './Radio.module.css';\n\ntype RadioProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type'> & { label: string };\n\nexport const Radio = ({ value, checked, name, id, label, onChange }: RadioProps) => {\n  return (\n    <label>\n      <span className={styles.label}>{label}</span>\n      <input value={value} checked={checked} id={id} name={name} onChange={onChange} type=\"radio\" />\n    </label>\n  );\n};\n","import { ChangeEventHandler } from 'react';\n\nimport { FieldValue, FieldOption, FormField } from 'features/FormFromJson/types';\nimport { Radio } from 'shared/components/Radio';\n\nimport styles from './RadioGroup.module.css';\n\ntype RadioGroupProps = {\n  options?: FieldOption[];\n  id: FormField['id'];\n  name: FormField['name'];\n  value: FieldValue;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n};\n\nexport const RadioGroup = ({ options, name, id, value, onChange }: RadioGroupProps) => {\n  return (\n    <div className={styles.group}>\n      {(options || []).map(option => {\n        const isChecked = option.value === value;\n\n        return (\n          <Radio\n            label={option.label}\n            id={id}\n            name={name}\n            key={option.label}\n            value={option.value.toString()}\n            checked={isChecked}\n            onChange={onChange}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import { InputHTMLAttributes } from 'react';\n\ntype TextInputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type'>;\n\nexport const TextInput = ({ value, name, id, onChange, ...props }: TextInputProps) => {\n  return <input type=\"text\" name={name} value={value} id={id} onChange={onChange} {...props} />;\n};\n","import { InputHTMLAttributes } from 'react';\n\ntype NumberProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type'>;\n\nexport const Number = ({ value, name, id, onChange }: NumberProps) => {\n  return <input type=\"number\" name={name} value={value} id={id} onChange={onChange} />;\n};\n","import { InputHTMLAttributes } from 'react';\n\ntype DateProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type'>;\n\nexport const Date = ({ value, name, id, onChange }: DateProps) => {\n  return <input type=\"date\" name={name} value={value?.toString()} id={id} onChange={onChange} />;\n};\n","import { InputHTMLAttributes } from 'react';\n\ntype CheckboxProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'value' | 'checked' | 'type'> & { value: Boolean };\n\nexport const Checkbox = ({ value, name, id, onChange }: CheckboxProps) => {\n  return <input type=\"checkbox\" name={name} checked={Boolean(value)} id={id} onChange={onChange} />;\n};\n","import { TextareaHTMLAttributes } from 'react';\nimport cn from 'classnames/bind';\n\nimport { FieldValue } from 'features/FormFromJson/types';\n\ntype TextareaProps = Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'value'> & {\n  value: FieldValue;\n  className?: string;\n};\n\nexport const Textarea = ({ value, name, id, className, onChange, ...props }: TextareaProps) => {\n  return <textarea className={cn(className)} name={name} value={value?.toString()} id={id} onChange={onChange} />;\n};\n","import { useCallback, ChangeEvent, memo } from 'react';\n\nimport { FormField, FieldValue } from 'features/FormFromJson/types';\n\nimport { RadioGroup } from 'features/FormFromJson/components/RadioGroup';\n\nimport { TextInput } from 'shared/components/TextInput';\nimport { Number } from 'shared/components/Number';\nimport { Date } from 'shared/components/Date';\nimport { Checkbox } from 'shared/components/Checkbox';\nimport { Textarea } from 'shared/components/Textarea';\n\nimport styles from './Control.module.css';\n\ntype ControlProps = {\n  value: FieldValue;\n  config: FormField;\n  onChange: (value: FieldValue) => void;\n};\n\nexport const Control = memo(({ value, config, onChange }: ControlProps) => {\n  const handleInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const { type, checked, value } = e.target;\n\n      const inputValue = type === 'checkbox' ? checked : value;\n      onChange(inputValue);\n    },\n    [onChange]\n  );\n\n  const handleTextareaChange = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement>) => {\n      const { value } = e.target;\n\n      onChange(value);\n    },\n    [onChange]\n  );\n\n  const getControl = () => {\n    switch (config.type) {\n      case 'text':\n        return <TextInput value={value.toString()} id={config.id} name={config.name} onChange={handleInputChange} />;\n      case 'number':\n        return <Number value={value.toString()} id={config.id} name={config.name} onChange={handleInputChange} />;\n      case 'textarea':\n        return <Textarea value={value} id={config.id} name={config.name} onChange={handleTextareaChange} />;\n      case 'radio':\n        return (\n          <RadioGroup\n            value={value}\n            options={config.options}\n            id={config.id}\n            name={config.name}\n            onChange={handleInputChange}\n          />\n        );\n      case 'checkbox':\n        return <Checkbox value={Boolean(value)} id={config.id} name={config.name} onChange={handleInputChange} />;\n      case 'date':\n        return <Date value={value.toString()} id={config.id} name={config.name} onChange={handleInputChange} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={config.id || config.name}>\n        {config.label}\n      </label>\n      {getControl()}\n    </div>\n  );\n});\n","import { FormField } from 'features/FormFromJson/types';\n\nimport { Field } from 'features/FormFromJson/components/Field';\nimport { Control } from 'features/FormFromJson/components/Control';\n\ntype FieldsProps = {\n  fields?: FormField[];\n};\n\nexport const Fields = ({ fields }: FieldsProps) => {\n  return (\n    <>\n      {(fields || []).map(field => (\n        <Field key={field.id} name={field.name}>\n          {(value, onChange) => <Control value={value} onChange={onChange} config={field} />}\n        </Field>\n      ))}\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { ReactNode, ButtonHTMLAttributes } from 'react';\n\nimport styles from './Button.module.css';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: ReactNode;\n  className?: string;\n};\n\nexport const Button = ({ children, onClick, className, ...props }: ButtonProps) => {\n  return (\n    <button className={cn(styles.button, className)} onClick={onClick} {...props}>\n      {children}\n    </button>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { FormConfig } from 'features/FormFromJson/types';\n\nimport { Fields } from 'features/FormFromJson/components/Fields';\nimport { useForm } from 'features/FormFromJson/FormContext';\nimport { Button } from 'shared/components/Button';\n\nimport styles from './Form.module.css';\n\ntype FormProps = {\n  config: FormConfig;\n};\n\nexport const Form = ({ config }: FormProps) => {\n  const { formData, handleReset } = useForm();\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      console.log(formData);\n    },\n    [formData]\n  );\n\n  return (\n    <>\n      <h2>{config.title}</h2>\n      <form onSubmit={handleSubmit}>\n        <Fields fields={config.fields} />\n\n        <div className={styles.controls}>\n          {!config.hideSubmit && <Button type=\"submit\">{config.submitText || 'Ok'}</Button>}\n          {!config.hideCancel && (\n            <Button type=\"button\" onClick={handleReset}>\n              {config.cancelText || 'Reset'}\n            </Button>\n          )}\n        </div>\n      </form>\n    </>\n  );\n};\n","import { FormConfig } from 'features/FormFromJson/types';\nimport { FormContextProvider } from 'features/FormFromJson/FormContext';\n\nimport { Form } from 'features/FormFromJson/components/Form';\n\ntype FormFromJsonProps = {\n  config: FormConfig;\n};\n\nexport const FormFromJson = ({ config }: FormFromJsonProps) => (\n  <FormContextProvider config={config}>\n    <Form config={config} />\n  </FormContextProvider>\n);\n","import { useCallback, useState, ChangeEvent } from 'react';\n\nimport { Textarea } from 'shared/components/Textarea';\nimport { Button } from 'shared/components/Button';\nimport { validateJson } from './validateJson';\n\nimport styles from './PrettyJsonTextarea.module.css';\n\ntype PrettyJsonTextareaProps<T> = {\n  value: T;\n  onChange: (value: T) => void;\n};\n\nexport const PrettyJsonTextarea = <T extends object>({ value, onChange }: PrettyJsonTextareaProps<T>) => {\n  const [jsonString, setJsonString] = useState(() => JSON.stringify(value, null, 2));\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<boolean>(false);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = e.target;\n\n    setJsonString(value);\n  }, []);\n\n  const handleApply = useCallback(async () => {\n    try {\n      const parsedValue = JSON.parse(jsonString);\n      setJsonString(JSON.stringify(parsedValue, null, 2));\n\n      const state = validateJson(parsedValue);\n\n      if (state.error) {\n        setSuccess(false);\n        setError(state.error.message);\n        return;\n      }\n\n      setSuccess(true);\n      setError(null);\n      onChange(parsedValue);\n    } catch (error) {\n      setSuccess(false);\n      if (error instanceof SyntaxError) {\n        setError(error.message);\n      }\n    }\n  }, [jsonString, onChange]);\n\n  return (\n    <>\n      <Textarea className={styles.textarea} value={jsonString} onChange={handleChange} />\n      {error && (\n        <div className={styles.error} role=\"alert\">\n          {error}\n        </div>\n      )}\n      {success && (\n        <div className={styles.success} role=\"status\">\n          Form is generated\n        </div>\n      )}\n\n      <div className={styles.controls}>\n        <Button type=\"button\" onClick={handleApply}>\n          Apply\n        </Button>\n      </div>\n    </>\n  );\n};\n","import Joi from 'joi';\n\nexport const validateJson = <T extends object>(json: T) => {\n  const schema = Joi.object({\n    title: Joi.string().required(),\n    submitText: Joi.string(),\n    cancelText: Joi.string(),\n    hideSubmit: Joi.boolean(),\n    hideCancel: Joi.boolean(),\n    fields: Joi.array().items(\n      Joi.object({\n        label: Joi.string().required(),\n        name: Joi.string().required(),\n        id: Joi.string().required(),\n        type: Joi.string().valid('number', 'text', 'textarea', 'checkbox', 'date', 'radio').required(),\n        value: [Joi.string(), Joi.number(), Joi.boolean()],\n        options: Joi.array().items(\n          Joi.object({\n            label: Joi.string().required(),\n            value: [Joi.string(), Joi.number(), Joi.boolean()]\n          })\n        )\n      })\n    )\n  });\n\n  return schema.validate(json);\n};\n","import { ReactNode, useState, useCallback } from 'react';\nimport classNames from 'classnames/bind';\n\nimport styles from './Tabs.module.css';\n\nconst cx = classNames.bind(styles);\n\ntype TabsProps = {\n  items: Array<{ title: string; id: string; content: ReactNode }>;\n};\n\nexport const Tabs = ({ items }: TabsProps) => {\n  const [activeId, setActiveId] = useState(items[0].id);\n\n  const handleChange = useCallback((id: string) => {\n    return () => setActiveId(id);\n  }, []);\n\n  return (\n    <div>\n      <ul className={cx('nav')} role=\"tablist\">\n        {items.map(item => (\n          <li key={item.id} role=\"presentation\">\n            <button\n              className={cx('button', { active: item.id === activeId })}\n              type=\"button\"\n              onClick={handleChange(item.id)}\n              role=\"tab\"\n              aria-selected={item.id === activeId}\n            >\n              {item.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className={cx('panels')}>\n        {items\n          .filter(item => item.id === activeId)\n          .map(item => (\n            <div key={item.id} id={`tab-${item.id}`} role=\"tabpanel\">\n              {item.content}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport styles from './DefaultLayout.module.css';\n\nexport const DefaultLayout: FC = ({ children }) => {\n  return <main className={styles['layout']}>{children}</main>;\n};\n","import { FormConfig } from 'features/FormFromJson/types';\n\nexport const defaultJsonConfig: FormConfig = {\n  title: 'Form',\n  submitText: 'Submit',\n  cancelText: 'Cancel',\n  fields: [\n    {\n      label: 'Text',\n      id: 'text',\n      name: 'text',\n      type: 'text'\n    },\n    {\n      label: 'Textarea',\n      id: 'textarea',\n      name: 'textarea',\n      type: 'textarea'\n    },\n    {\n      label: 'Date',\n      id: 'date',\n      name: 'date',\n      type: 'date',\n      value: '2020-01-01'\n    },\n    {\n      label: 'Number',\n      id: 'number',\n      name: 'number',\n      type: 'number',\n      value: 3\n    },\n    {\n      label: 'Checkbox',\n      id: 'checkbox',\n      name: 'checkbox',\n      type: 'checkbox',\n      value: false\n    },\n    {\n      label: 'Radio',\n      name: 'radio',\n      id: 'radio',\n      type: 'radio',\n      value: 'radio-1',\n      options: [\n        {\n          label: 'Radio 1',\n          value: 'radio-1'\n        },\n        {\n          label: 'Radio 2',\n          value: 'radio-2'\n        }\n      ]\n    }\n  ]\n};\n","import { useCallback, useMemo, useState } from 'react';\n\nimport { FormConfig } from 'features/FormFromJson/types';\n\nimport { FormFromJson } from 'features/FormFromJson';\nimport { PrettyJsonTextarea } from 'features/PrettyJsonTextarea';\n\nimport { Tabs } from 'shared/components/Tabs';\nimport { DefaultLayout } from 'shared/layouts/DefaultLayout';\n\nimport { defaultJsonConfig } from './defaultJsonConfig';\n\nexport const JsonToFormScreen = () => {\n  const [json, setJson] = useState<FormConfig>(defaultJsonConfig);\n\n  const handleChange = useCallback((value: FormConfig) => {\n    setJson(value);\n  }, []);\n\n  const tabItems = useMemo(\n    () => [\n      {\n        title: 'Config',\n        id: 'config',\n        content: <PrettyJsonTextarea value={json} onChange={handleChange} />\n      },\n      {\n        title: 'Result',\n        id: 'result',\n        content: <FormFromJson config={json} />\n      }\n    ],\n    [handleChange, json]\n  );\n\n  return (\n    <DefaultLayout>\n      <Tabs items={tabItems} />\n    </DefaultLayout>\n  );\n};\n","import 'app/styles/index.css';\n\nimport { JsonToFormScreen } from 'screens/JsonToFormScreen';\n\nexport const App = () => {\n  return <JsonToFormScreen />;\n};\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\n\nimport { App } from 'app';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}